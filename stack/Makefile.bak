cc = gcc
CFLAGS = -std=gnu99 -pedantic -Wall
SRCS = $(wildcard *.c)
OBJS = $(patsubst %.c, %.o, $(SRCS))

main: $(OBJS)
	gcc -o $@ $(OBJS)

# This is built in make, If we use make -p
# we will find:
# %.o: %.c
# # commands to execute (built-in)
# 	  $(COMPILE.c) $(OUTPUT_OPTION) $<
#
# To understand the rule above requires us look at the definitions of
# COMPILE.c and OUTOUT_OPTION, which are alse included in the output
# if make -p.
#
# COMPILE.c = $(cc) $(CFLAGS) $(CPPFLAGS) $(TARGET_ARCH) -c
# OUTPUT_OPTION = -o $@
# $<: the first prerequisite of the rule
#
# %.o: %.c
# 	gcc $(CFLAGS) -c $<

.PHONY: clean
clean:
	rm -f main *.o *.c~ *.h~
depend:
	makedepend $(SRCS)

# Do NOT DELETE
main.o: stack.h
stack.o: stack.h
